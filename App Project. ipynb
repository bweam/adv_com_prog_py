{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"App Project. ipynb","provenance":[{"file_id":"1Qye1r6ujbCBH_HZs9Qp_KwG01LMHd9Ot","timestamp":1607164680315}],"collapsed_sections":[],"authorship_tag":"ABX9TyPfLZC2K+bPlyPtxIr/Ji2t"},"kernelspec":{"display_name":"Python 3","name":"python3"}},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-oPfm-z7v9h7","executionInfo":{"status":"ok","timestamp":1607739142170,"user_tz":-420,"elapsed":13346,"user":{"displayName":"Supatach Vanichayangkuranont","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg8FZkgh6-eNBzvItWnL9wxzymyalfyrRiJ_QF3_g=s64","userId":"00196661300284228283"}},"outputId":"27ff8f76-0869-4dd0-a1a8-7ac734781ee1"},"source":["! pip install -U kaleido"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Collecting kaleido\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/83/39/1c960a971f8d27e6aa4f1462dc048275c98bbb46f16871269ba941bb4a04/kaleido-0.1.0-py2.py3-none-manylinux1_x86_64.whl (74.6MB)\n","\u001b[K     |████████████████████████████████| 74.6MB 55kB/s \n","\u001b[?25hInstalling collected packages: kaleido\n","Successfully installed kaleido-0.1.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Mt35nDLD753N","executionInfo":{"status":"ok","timestamp":1607739143274,"user_tz":-420,"elapsed":14409,"user":{"displayName":"Supatach Vanichayangkuranont","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg8FZkgh6-eNBzvItWnL9wxzymyalfyrRiJ_QF3_g=s64","userId":"00196661300284228283"}},"outputId":"17e1e455-ad96-4572-c651-4a6c4033a213"},"source":["! conda install -c plotly plotly-orca"],"execution_count":2,"outputs":[{"output_type":"stream","text":["/bin/bash: conda: command not found\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Fn2i4_yl66Tz","executionInfo":{"status":"ok","timestamp":1607739160183,"user_tz":-420,"elapsed":31311,"user":{"displayName":"Supatach Vanichayangkuranont","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg8FZkgh6-eNBzvItWnL9wxzymyalfyrRiJ_QF3_g=s64","userId":"00196661300284228283"}},"outputId":"d595dee3-40cd-46a0-a667-ca7e70eb6cfb"},"source":["!npm install -g electron@1.8.4 orca\n","\n","!pip install psutil requests"],"execution_count":3,"outputs":[{"output_type":"stream","text":["\u001b[K\u001b[?25h\u001b[37;40mnpm\u001b[0m \u001b[0m\u001b[30;43mWARN\u001b[0m \u001b[0m\u001b[35mdeprecated\u001b[0m request@2.88.2: request has been deprecated, see https://github.com/request/request/issues/3142\n","\u001b[K\u001b[?25h\u001b[37;40mnpm\u001b[0m \u001b[0m\u001b[30;43mWARN\u001b[0m \u001b[0m\u001b[35mdeprecated\u001b[0m har-validator@5.1.5: this library is no longer supported\n","\u001b[K\u001b[?25h\u001b[37;40mnpm\u001b[0m \u001b[0m\u001b[30;43mWARN\u001b[0m \u001b[0m\u001b[35mdeprecated\u001b[0m left-pad@1.3.0: use String.prototype.padStart()\n","\u001b[0m\u001b[37;40mnpm\u001b[0m \u001b[0m\u001b[30;43mWARN\u001b[0m \u001b[0m\u001b[35mdeprecated\u001b[0m request-promise-native@1.0.9: request-promise-native has been deprecated because it extends the now deprecated request package, see https://github.com/request/request/issues/3142\n","\u001b[K\u001b[?25h/tools/node/bin/electron -> /tools/node/lib/node_modules/electron/cli.js\n","\u001b[K\u001b[?25h/tools/node/bin/orca -> /tools/node/lib/node_modules/orca/bin/orca.js\n","\u001b[K\u001b[?25h\n","> electron@1.8.4 postinstall /tools/node/lib/node_modules/electron\n","> node install.js\n","\n","/tools/node/lib/node_modules/electron/install.js:47\n","  throw err\n","  ^\n","\n","[Error: EACCES: permission denied, mkdir '/tools/node/lib/node_modules/electron/.electron'] {\n","  errno: \u001b[33m-13\u001b[39m,\n","  code: \u001b[32m'EACCES'\u001b[39m,\n","  syscall: \u001b[32m'mkdir'\u001b[39m,\n","  path: \u001b[32m'/tools/node/lib/node_modules/electron/.electron'\u001b[39m\n","}\n","\u001b[K\u001b[?25h\u001b[37;40mnpm\u001b[0m \u001b[0m\u001b[31;40mERR!\u001b[0m \u001b[0m\u001b[35mcode\u001b[0m ELIFECYCLE\n","\u001b[0m\u001b[37;40mnpm\u001b[0m \u001b[0m\u001b[31;40mERR!\u001b[0m \u001b[0m\u001b[35merrno\u001b[0m 1\n","\u001b[0m\u001b[37;40mnpm\u001b[0m \u001b[0m\u001b[31;40mERR!\u001b[0m\u001b[35m\u001b[0m electron@1.8.4 postinstall: `node install.js`\n","\u001b[0m\u001b[37;40mnpm\u001b[0m \u001b[0m\u001b[31;40mERR!\u001b[0m\u001b[35m\u001b[0m Exit status 1\n","\u001b[0m\u001b[37;40mnpm\u001b[0m \u001b[0m\u001b[31;40mERR!\u001b[0m\u001b[35m\u001b[0m \n","\u001b[0m\u001b[37;40mnpm\u001b[0m \u001b[0m\u001b[31;40mERR!\u001b[0m\u001b[35m\u001b[0m Failed at the electron@1.8.4 postinstall script.\n","\u001b[0m\u001b[37;40mnpm\u001b[0m \u001b[0m\u001b[31;40mERR!\u001b[0m\u001b[35m\u001b[0m This is probably not a problem with npm. There is likely additional logging output above.\n","\u001b[0m\n","\u001b[37;40mnpm\u001b[0m \u001b[0m\u001b[31;40mERR!\u001b[0m\u001b[35m\u001b[0m A complete log of this run can be found in:\n","\u001b[0m\u001b[37;40mnpm\u001b[0m \u001b[0m\u001b[31;40mERR!\u001b[0m\u001b[35m\u001b[0m     /root/.npm/_logs/2020-12-12T02_12_37_897Z-debug.log\n","\u001b[0mRequirement already satisfied: psutil in /usr/local/lib/python3.6/dist-packages (5.4.8)\n","Requirement already satisfied: requests in /usr/local/lib/python3.6/dist-packages (2.23.0)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.6/dist-packages (from requests) (2.10)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.6/dist-packages (from requests) (1.24.3)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests) (3.0.4)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.6/dist-packages (from requests) (2020.12.5)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LFucwQYDx2sX","executionInfo":{"status":"ok","timestamp":1607739162845,"user_tz":-420,"elapsed":33967,"user":{"displayName":"Supatach Vanichayangkuranont","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg8FZkgh6-eNBzvItWnL9wxzymyalfyrRiJ_QF3_g=s64","userId":"00196661300284228283"}},"outputId":"565fe4ad-a7e9-44eb-c7b4-c2e68d38e6e0"},"source":["!pip install flask flask-cors"],"execution_count":4,"outputs":[{"output_type":"stream","text":["Requirement already satisfied: flask in /usr/local/lib/python3.6/dist-packages (1.1.2)\n","Collecting flask-cors\n","  Downloading https://files.pythonhosted.org/packages/69/7f/d0aeaaafb5c3c76c8d2141dbe2d4f6dca5d6c31872d4e5349768c1958abc/Flask_Cors-3.0.9-py2.py3-none-any.whl\n","Requirement already satisfied: click>=5.1 in /usr/local/lib/python3.6/dist-packages (from flask) (7.1.2)\n","Requirement already satisfied: Werkzeug>=0.15 in /usr/local/lib/python3.6/dist-packages (from flask) (1.0.1)\n","Requirement already satisfied: Jinja2>=2.10.1 in /usr/local/lib/python3.6/dist-packages (from flask) (2.11.2)\n","Requirement already satisfied: itsdangerous>=0.24 in /usr/local/lib/python3.6/dist-packages (from flask) (1.1.0)\n","Requirement already satisfied: Six in /usr/local/lib/python3.6/dist-packages (from flask-cors) (1.15.0)\n","Requirement already satisfied: MarkupSafe>=0.23 in /usr/local/lib/python3.6/dist-packages (from Jinja2>=2.10.1->flask) (1.1.1)\n","Installing collected packages: flask-cors\n","Successfully installed flask-cors-3.0.9\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TMvbA1-YyL92","executionInfo":{"status":"ok","timestamp":1607739166544,"user_tz":-420,"elapsed":37660,"user":{"displayName":"Supatach Vanichayangkuranont","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg8FZkgh6-eNBzvItWnL9wxzymyalfyrRiJ_QF3_g=s64","userId":"00196661300284228283"}},"outputId":"e5c10343-6b71-4416-d136-d03776a7ec89"},"source":["!pip install flask_ngrok"],"execution_count":5,"outputs":[{"output_type":"stream","text":["Collecting flask_ngrok\n","  Downloading https://files.pythonhosted.org/packages/af/6c/f54cb686ad1129e27d125d182f90f52b32f284e6c8df58c1bae54fa1adbc/flask_ngrok-0.0.25-py3-none-any.whl\n","Requirement already satisfied: Flask>=0.8 in /usr/local/lib/python3.6/dist-packages (from flask_ngrok) (1.1.2)\n","Requirement already satisfied: requests in /usr/local/lib/python3.6/dist-packages (from flask_ngrok) (2.23.0)\n","Requirement already satisfied: click>=5.1 in /usr/local/lib/python3.6/dist-packages (from Flask>=0.8->flask_ngrok) (7.1.2)\n","Requirement already satisfied: itsdangerous>=0.24 in /usr/local/lib/python3.6/dist-packages (from Flask>=0.8->flask_ngrok) (1.1.0)\n","Requirement already satisfied: Jinja2>=2.10.1 in /usr/local/lib/python3.6/dist-packages (from Flask>=0.8->flask_ngrok) (2.11.2)\n","Requirement already satisfied: Werkzeug>=0.15 in /usr/local/lib/python3.6/dist-packages (from Flask>=0.8->flask_ngrok) (1.0.1)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.6/dist-packages (from requests->flask_ngrok) (1.24.3)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.6/dist-packages (from requests->flask_ngrok) (2.10)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests->flask_ngrok) (3.0.4)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.6/dist-packages (from requests->flask_ngrok) (2020.12.5)\n","Requirement already satisfied: MarkupSafe>=0.23 in /usr/local/lib/python3.6/dist-packages (from Jinja2>=2.10.1->Flask>=0.8->flask_ngrok) (1.1.1)\n","Installing collected packages: flask-ngrok\n","Successfully installed flask-ngrok-0.0.25\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e8qC4EOb2aqX","executionInfo":{"status":"ok","timestamp":1607739168135,"user_tz":-420,"elapsed":39245,"user":{"displayName":"Supatach Vanichayangkuranont","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg8FZkgh6-eNBzvItWnL9wxzymyalfyrRiJ_QF3_g=s64","userId":"00196661300284228283"}},"outputId":"c6d453a0-056d-4097-c275-b8a38691ea04"},"source":["!pip install pymongo[srv]"],"execution_count":6,"outputs":[{"output_type":"stream","text":["Requirement already satisfied: pymongo[srv] in /usr/local/lib/python3.6/dist-packages (3.11.2)\n","Collecting dnspython<2.0.0,>=1.16.0; extra == \"srv\"\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/ec/d3/3aa0e7213ef72b8585747aa0e271a9523e713813b9a20177ebe1e939deb0/dnspython-1.16.0-py2.py3-none-any.whl (188kB)\n","\u001b[K     |████████████████████████████████| 194kB 4.3MB/s \n","\u001b[?25hInstalling collected packages: dnspython\n","Successfully installed dnspython-1.16.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OOz52HMWy9fA","outputId":"29172fc7-0d20-4d2c-bd60-f3d1fdff2f4d"},"source":["from flask_ngrok import run_with_ngrok\n","from flask import Flask\n","from flask import request\n","from flask import jsonify\n","import pymongo\n","from flask_cors import CORS, cross_origin\n","import random\n","from pymongo import MongoClient\n","# import os\n","\n","app = Flask(__name__)\n","CORS(app, support_credentials=True)\n","run_with_ngrok(app)\n","@app.route('/')\n","def home():\n","  return '<h1>Hello from Flask</h1>'\n","\n","@app.route('/greeting')\n","def greeting():\n","  name=request.args.get('name')\n","  return '<h3>Hello '+name+'</h3>'\n","\n","# @app.route('/insert')\n","# def insert():\n","#   name=request.args.get('name')\n","#   desc=request.args.get('desc')\n","#   ratings=request.args.get('ratings')\n","#   prange=request.args.get('prange')\n","#   tags=request.args.get('tags')\n","#   client=MongoClient(\"mongodb+srv://testuser:beam4456@cluster0.ntixl.mongodb.net/Demo1?retryWrites=true&w=majority\")\n","#   db=client.landmarks_db\n","#   db.landmarks.insert_one({'name':name,'desc':desc,'ratings':int(ratings),'prange':float(prange),'tags':tags})\n","#   return '<h3>Finished</h3>'\n","\n","@app.route('/insert', methods=['POST'])\n","def insert():\n","  client=MongoClient(\"mongodb+srv://testuser:beam4456@cluster0.ntixl.mongodb.net/Demo1?retryWrites=true&w=majority\")\n","  db = client.landmarks_db.landmarks\n","  newData = request.json\n","  db.insert_one({\n","      'name': newData['name'],\n","      'desc': newData['desc'],\n","      'ratings': int(newData['ratings']),\n","      'prange': float(newData['prange']),\n","      'tags': newData['tags']\n","  })\n","  return {'status':'done'}, 200\n","\n","\n","@app.route('/get')\n","def get():\n","  id=request.args.get('id')\n","  client=MongoClient(\"mongodb+srv://testuser:beam4456@cluster0.ntixl.mongodb.net/Demo1?retryWrites=true&w=majority\")\n","  db=client.landmarks_db\n","  res=db.landmarks.find_one({'name':id})\n","  ret=dict()\n","  res.pop('_id',None)\n","  ret['data']=res\n","  return jsonify(ret)\n","\n","@app.route('/getRandom')\n","def getRandom():\n","  ret=dict()\n","  id=int(request.args.get('id'))\n","  client=MongoClient(\"mongodb+srv://testuser:beam4456@cluster0.ntixl.mongodb.net/Demo1?retryWrites=true&w=majority\")\n","  db=client.landmarks_db\n","  doc=db.landmarks.find({})\n","  res=[]\n","  for docs in doc[id:id+10]:\n","    res.append({'name': docs['name'],'desc':docs['desc'],'ratings':docs['ratings'],'prange':docs['prange'],'tags':docs['tags']})\n","  ret['data']=res\n","  return jsonify(ret)\n","\n","@app.route('/getAll')\n","def getAll():\n","  ret=dict()\n","  client=MongoClient(\"mongodb+srv://testuser:beam4456@cluster0.ntixl.mongodb.net/Demo1?retryWrites=true&w=majority\")\n","  db=client.landmarks_db\n","  doc=db.landmarks.find({})\n","  res=[]\n","  rate0=[]\n","  rate1=[]\n","  rate2=[]\n","  rate3=[]\n","  rate4=[]\n","  rate5=[]\n","  rate6=[]\n","  rate7=[]\n","  rate8=[]\n","  rate9=[]\n","  rate10=[]\n","  # allratingstuple=[]\n","  allratings=[0 for i in range(11)]\n","  for docs in doc:\n","    res.append({'name': docs['name'],'desc':docs['desc'],'ratings':docs['ratings'],'prange':docs['prange'],'tags':docs['tags']})\n","    ret['data']=res\n","    for item in res:\n","      if (item['ratings'] == 0): rate0.append(item['prange'])\n","      if (item['ratings'] == 1): rate1.append(item['prange'])\n","      if (item['ratings'] == 2): rate2.append(item['prange'])\n","      if (item['ratings'] == 3): rate3.append(item['prange'])\n","      if (item['ratings'] == 4): rate4.append(item['prange'])\n","      if (item['ratings'] == 5): rate5.append(item['prange'])\n","      if (item['ratings'] == 6): rate6.append(item['prange'])\n","      if (item['ratings'] == 7): rate7.append(item['prange'])\n","      if (item['ratings'] == 8): rate8.append(item['prange'])\n","      if (item['ratings'] == 9): rate9.append(item['prange'])\n","      if (item['ratings'] == 10): rate10.append(item['prange'])\n","  tempsum=0\n","  for item in rate0:\n","    tempsum += item\n","  allratings[0]+=(tempsum/len(rate0))\n","  tempsum=0\n","  for item in rate1:\n","    tempsum += item\n","  allratings[1]+=(tempsum/len(rate1))\n","  tempsum=0\n","  for item in rate2:\n","    tempsum += item\n","  allratings[2]+=(tempsum/len(rate2))\n","  tempsum=0\n","  for item in rate3:\n","    tempsum += item\n","  allratings[3]+=(tempsum/len(rate3))\n","  tempsum=0\n","  for item in rate4:\n","    tempsum += item\n","  allratings[4]+=(tempsum/len(rate4))\n","  tempsum=0\n","  for item in rate5:\n","    tempsum += item\n","  allratings[5]+=(tempsum/len(rate5))\n","  tempsum=0\n","  for item in rate6:\n","    tempsum += item\n","  allratings[6]+=(tempsum/len(rate6))\n","  tempsum=0\n","  for item in rate7:\n","    tempsum += item\n","  allratings[7]+=(tempsum/len(rate7))\n","  tempsum=0\n","  for item in rate8:\n","    tempsum += item\n","  allratings[8]+=(tempsum/len(rate8))\n","  tempsum=0\n","  for item in rate9:\n","    tempsum += item\n","  allratings[9]+=(tempsum/len(rate9))\n","  tempsum=0\n","  for item in rate10:\n","    tempsum += item\n","  allratings[10]+=(tempsum/len(rate10))\n","  ret['data']=allratings\n","  return jsonify(ret)\n","\n","app.run()"],"execution_count":null,"outputs":[{"output_type":"stream","text":[" * Serving Flask app \"__main__\" (lazy loading)\n"," * Environment: production\n","\u001b[31m   WARNING: This is a development server. Do not use it in a production deployment.\u001b[0m\n","\u001b[2m   Use a production WSGI server instead.\u001b[0m\n"," * Debug mode: off\n"],"name":"stdout"},{"output_type":"stream","text":[" * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n"],"name":"stderr"},{"output_type":"stream","text":[" * Running on http://83ba90f58b2f.ngrok.io\n"," * Traffic stats available on http://127.0.0.1:4040\n"],"name":"stdout"},{"output_type":"stream","text":["127.0.0.1 - - [12/Dec/2020 02:13:47] \"\u001b[37mGET /getRandom?id=0 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:13:48] \"\u001b[37mGET /getRandom?id=0 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:13:49] \"\u001b[37mGET /getRandom?id=0 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:13:51] \"\u001b[37mGET /getRandom?id=0 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:14:12] \"\u001b[37mGET /getRandom?id=0 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:14:13] \"\u001b[37mGET /getRandom?id=0 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:14:17] \"\u001b[37mGET /getRandom?id=10 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:14:19] \"\u001b[37mGET /getRandom?id=20 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:14:20] \"\u001b[37mGET /getRandom?id=30 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:14:32] \"\u001b[37mGET /getRandom?id=40 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:17:00] \"\u001b[37mGET /getRandom?id=0 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:17:01] \"\u001b[37mGET /getRandom?id=0 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:18:48] \"\u001b[37mGET /getAll HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:20:13] \"\u001b[37mOPTIONS /insert HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:20:14] \"\u001b[37mPOST /insert HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:20:21] \"\u001b[37mGET /getRandom?id=0 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:20:22] \"\u001b[37mGET /getRandom?id=0 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:20:22] \"\u001b[37mGET /getRandom?id=10 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:20:23] \"\u001b[37mGET /getRandom?id=20 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:20:24] \"\u001b[37mGET /getRandom?id=30 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:20:41] \"\u001b[37mGET /getRandom?id=30 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:20:41] \"\u001b[37mGET /getRandom?id=40 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:20:44] \"\u001b[37mGET /getRandom?id=10 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:20:46] \"\u001b[37mGET /getRandom?id=20 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:20:47] \"\u001b[37mGET /getRandom?id=30 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:20:57] \"\u001b[37mGET /getRandom?id=0 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:20:58] \"\u001b[37mGET /getRandom?id=0 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:20:59] \"\u001b[37mGET /getRandom?id=10 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:21:00] \"\u001b[37mGET /getRandom?id=20 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:21:02] \"\u001b[37mGET /getRandom?id=30 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:23:21] \"\u001b[37mOPTIONS /insert HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:23:21] \"\u001b[37mPOST /insert HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:25:26] \"\u001b[37mGET /getRandom?id=0 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:25:27] \"\u001b[37mGET /getRandom?id=0 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:25:28] \"\u001b[37mGET /getRandom?id=10 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:25:29] \"\u001b[37mGET /getRandom?id=20 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:25:30] \"\u001b[37mGET /getRandom?id=30 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:25:32] \"\u001b[37mGET /getRandom?id=40 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:25:45] \"\u001b[37mGET /getRandom?id=50 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:26:30] \"\u001b[37mGET /getRandom?id=60 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:26:35] \"\u001b[37mGET /getRandom?id=0 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:26:36] \"\u001b[37mGET /getRandom?id=0 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:26:38] \"\u001b[37mGET /getAll HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:26:42] \"\u001b[37mGET /getRandom?id=0 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:26:43] \"\u001b[37mGET /getRandom?id=10 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:26:44] \"\u001b[37mGET /getRandom?id=20 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:26:45] \"\u001b[37mGET /getRandom?id=30 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:26:47] \"\u001b[37mGET /getRandom?id=40 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:26:50] \"\u001b[37mGET /getRandom?id=0 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:26:50] \"\u001b[37mGET /getRandom?id=0 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:26:51] \"\u001b[37mGET /getAll HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:26:55] \"\u001b[37mGET /getAll HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:27:01] \"\u001b[37mGET /getRandom?id=0 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:27:06] \"\u001b[37mGET /getRandom?id=0 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:48:55] \"\u001b[37mGET /getRandom?id=10 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:49:01] \"\u001b[37mGET /getRandom?id=20 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:49:18] \"\u001b[37mGET /getRandom?id=20 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:49:44] \"\u001b[37mOPTIONS /insert HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:49:45] \"\u001b[37mPOST /insert HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:49:48] \"\u001b[37mGET /getAll HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:50:12] \"\u001b[37mGET /getRandom?id=0 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:50:14] \"\u001b[37mGET /getAll HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:50:18] \"\u001b[37mGET /getRandom?id=0 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:50:28] \"\u001b[37mGET /getAll HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:50:29] \"\u001b[37mGET /getRandom?id=0 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:50:38] \"\u001b[37mGET /getRandom?id=0 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:50:39] \"\u001b[37mGET /getRandom?id=0 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:50:54] \"\u001b[37mGET /getRandom?id=10 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:52:03] \"\u001b[37mGET /getRandom?id=0 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:52:04] \"\u001b[37mGET /getRandom?id=0 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:53:43] \"\u001b[37mGET /getRandom?id=0 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:53:43] \"\u001b[37mGET /getRandom?id=0 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:55:29] \"\u001b[37mGET /getRandom?id=0 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:55:30] \"\u001b[37mGET /getRandom?id=0 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:58:22] \"\u001b[37mGET /getRandom?id=10 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:58:26] \"\u001b[37mGET /getRandom?id=20 HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [12/Dec/2020 02:59:29] \"\u001b[37mGET /getRandom?id=0 HTTP/1.1\u001b[0m\" 200 -\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"colab":{"background_save":true},"id":"j-zXtV2efUu1"},"source":["  client=MongoClient(\"mongodb+srv://testuser:beam4456@cluster0.ntixl.mongodb.net/Demo1?retryWrites=true&w=majority\")\n","  db=client.landmarks_db\n","  doc=db.landmarks.find({})\n","  for docs in doc[0:2]:\n","    print(docs)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"UnDGOQ5XIhlN"},"source":["## DATA ANALYSIS"]},{"cell_type":"code","metadata":{"colab":{"background_save":true},"id":"k2Qtofs3JM0i"},"source":["!pip install dnspython"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"background_save":true},"id":"0KDRH7DEIgVb"},"source":["  import pymongo\n","  from pymongo import MongoClient\n","\n","  client=MongoClient(\"mongodb+srv://testuser:beam4456@cluster0.ntixl.mongodb.net/Demo1?retryWrites=true&w=majority\")\n","  db=client.landmarks_db\n","  document1=db.landmarks"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"background_save":true},"id":"Z5TR6juSJolB"},"source":["document1.find_one({}).keys()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"background_save":true},"id":"8dg3cvbCKFsK"},"source":["from collections import Counter\n","\n","document2 = document1.find({})\n","ratings = []\n","prange = []\n","tags = []\n","for doc in document2:\n","  # print(doc['name'])\n","  # print(doc['ratings'])\n","  # print(doc['prange'])\n","  # print(doc['tags'])\n","  # print('===============')\n","  ratings.append(doc['ratings'])\n","  prange.append(doc['prange'])\n","  tags.append(doc['tags'])\n","\n","points = [(ratings[i],prange[i]) for i in range(len(ratings))]\n","typelandmark = [tags[i][0] for i in range(len(tags))]\n","inout = [tags[i][1] for i in range(len(tags))]\n","subtags = [tags[i][2:] for i in range(len(tags))]\n","tags_df = [(typelandmark[i],inout[i],subtags[i]) for i in range(len(typelandmark))]\n","prange_type_df = [(typelandmark[i],prange[i]) for i in range(len(typelandmark))]\n","print(ratings)\n","print(prange)\n","print(points)\n","print(tags)\n","print(typelandmark)\n","print(inout)\n","print(subtags)\n","print(tags_df)\n","print(prange_type_df)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"background_save":true},"id":"lyKDZKxDQi0Y"},"source":["import plotly.express as px\n","import plotly.io\n","import plotly\n","# plotly.io.orca.config.executable = '/path/to/orca'\n","# plotly.io.orca.config.save()\n","\n","df = points\n","fig1 = px.scatter(df, x=ratings, y=prange, trendline=\"ols\",labels={'x':'ratings','y':'price($)'}, title='Graph showing correlation (trendline) between price and ratings of landmarks')\n","fig1.show()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"background_save":true},"id":"KGiG6R1x5VTD"},"source":["fig1_json"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"background_save":true},"id":"cG8SWcFQU9xu"},"source":["import plotly.express as px\n","df = prange_type_df\n","fig2 = px.box(df, x=typelandmark, y=prange, labels={'x':'type of landmark','y':'price($)'}, title='Graph showing correlation between each type of landmarks and their respective prices')\n","fig.show()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"background_save":true},"id":"-8tBmSfz-U7Z"},"source":["ret=dict()\n","client=MongoClient(\"mongodb+srv://testuser:beam4456@cluster0.ntixl.mongodb.net/Demo1?retryWrites=true&w=majority\")\n","db=client.landmarks_db\n","doc=db.landmarks.find({})\n","res=[]\n","rate0=[]\n","rate1=[]\n","rate2=[]\n","rate3=[]\n","rate4=[]\n","rate5=[]\n","rate6=[]\n","rate7=[]\n","rate8=[]\n","rate9=[]\n","rate10=[]\n","allratings=[0 for i in range(11)]\n","for docs in doc:\n","  res.append({'name': docs['name'],'desc':docs['desc'],'ratings':docs['ratings'],'prange':docs['prange'],'tags':docs['tags']})\n","ret['data']=res\n","for item in res:\n","  if (item['ratings'] == 0): rate0.append(item['prange'])\n","  if (item['ratings'] == 1): rate1.append(item['prange'])\n","  if (item['ratings'] == 2): rate2.append(item['prange'])\n","  if (item['ratings'] == 3): rate3.append(item['prange'])\n","  if (item['ratings'] == 4): rate4.append(item['prange'])\n","  if (item['ratings'] == 5): rate5.append(item['prange'])\n","  if (item['ratings'] == 6): rate6.append(item['prange'])\n","  if (item['ratings'] == 7): rate7.append(item['prange'])\n","  if (item['ratings'] == 8): rate8.append(item['prange'])\n","  if (item['ratings'] == 9): rate9.append(item['prange'])\n","  if (item['ratings'] == 10): rate10.append(item['prange'])\n","tempsum=0\n","for item in rate0:\n","  tempsum += item\n","allratings[0]+=(tempsum/len(rate0))\n","tempsum=0\n","for item in rate1:\n","  tempsum += item\n","allratings[1]+=(tempsum/len(rate1))\n","tempsum=0\n","for item in rate2:\n","  tempsum += item\n","allratings[2]+=(tempsum/len(rate2))\n","tempsum=0\n","for item in rate3:\n","  tempsum += item\n","allratings[3]+=(tempsum/len(rate3))\n","tempsum=0\n","for item in rate4:\n","  tempsum += item\n","allratings[4]+=(tempsum/len(rate4))\n","tempsum=0\n","for item in rate5:\n","  tempsum += item\n","allratings[5]+=(tempsum/len(rate5))\n","tempsum=0\n","for item in rate6:\n","  tempsum += item\n","allratings[6]+=(tempsum/len(rate6))\n","tempsum=0\n","for item in rate7:\n","  tempsum += item\n","allratings[7]+=(tempsum/len(rate7))\n","tempsum=0\n","for item in rate8:\n","  tempsum += item\n","allratings[8]+=(tempsum/len(rate8))\n","tempsum=0\n","for item in rate9:\n","  tempsum += item\n","allratings[9]+=(tempsum/len(rate9))\n","tempsum=0\n","for item in rate10:\n","  tempsum += item\n","allratings[10]+=(tempsum/len(rate10))\n","print(allratings)\n"],"execution_count":null,"outputs":[]}]}